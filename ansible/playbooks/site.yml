# =============================================================================
# ANSIBLE/PLAYBOOKS/SITE.YML - Playbook principal Fode-DevOps (CORRIGÉ)
# =============================================================================
---
- name: 🚀 Configuration complète infrastructure Fode-DevOps
  hosts: web_servers  # Changé de fode_devops_prod vers web_servers
  become: yes
  gather_facts: yes

  vars:
    project_name: "fode-devops"
    environment: "production"
    
    fode_devops_banner: |

      ======================================
      🚀 FODE-DEVOPS ANSIBLE AUTOMATION 🚀
      ======================================
      Infrastructure: {{ project_name }}-{{ environment }}
      Date: {{ ansible_date_time.date }}
      Serveur: {{ inventory_hostname }}
      ======================================

    # Variables pour les packages selon la distribution
    packages_redhat:
      - httpd
      - wget
      - curl
      - git
      - vim
      - htop
      - tree
      - net-tools
      
    packages_debian:
      - apache2
      - wget
      - curl
      - git
      - vim
      - htop
      - tree
      - net-tools
      - ufw

  tasks:
    - name: 📢 Affichage bannière Fode-DevOps
      debug:
        msg: "{{ fode_devops_banner }}"

    - name: 📊 Collecte des informations système
      setup:
        gather_subset:
          - hardware
          - network
          - virtual
          - distribution

    - name: 🔍 Détection du système d'exploitation
      debug:
        msg: "Système détecté: {{ ansible_os_family }} - {{ ansible_distribution }}"

    # ===== CONFIGURATION POUR RED HAT/CENTOS/AMAZON LINUX =====
    - name: 🔄 Mise à jour du système (Red Hat/CentOS/Amazon Linux)
      dnf:
        name: "*"
        state: latest
        update_cache: yes
      when: ansible_os_family == "RedHat"
      register: system_update_redhat

    - name: 📦 Installation des packages (Red Hat/CentOS/Amazon Linux)
      dnf:
        name: "{{ packages_redhat }}"
        state: present
      when: ansible_os_family == "RedHat"

    - name: 📦 Installation des dépendances firewall (Red Hat)
      dnf:
        name: 
          - firewalld
          - python3-firewall
        state: present
      when: ansible_os_family == "RedHat"

    - name: 🔥 Démarrage du service firewalld (Red Hat)
      systemd:
        name: firewalld
        state: started
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: 🌐 Démarrage du service Apache (Red Hat)
      systemd:
        name: httpd
        state: started
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: 🔧 Configuration du firewall (Red Hat)
      firewalld:
        port: "{{ item }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      loop:
        - "80"
        - "443"
      when: ansible_os_family == "RedHat"
      ignore_errors: yes

    # ===== CONFIGURATION POUR UBUNTU/DEBIAN =====
    - name: 🔄 Mise à jour du système (Ubuntu/Debian)
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
      register: system_update_debian

    - name: 📦 Installation des packages (Ubuntu/Debian)
      apt:
        name: "{{ packages_debian }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: 🌐 Démarrage du service Apache (Ubuntu/Debian)
      systemd:
        name: apache2
        state: started
        enabled: yes
      when: ansible_os_family == "Debian"

    - name: 🔧 Configuration du firewall UFW (Ubuntu/Debian)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "80"
        - "443"
        - "22"
      when: ansible_os_family == "Debian"
      ignore_errors: yes

    - name: 🔥 Activation du firewall UFW (Ubuntu/Debian)
      ufw:
        state: enabled
      when: ansible_os_family == "Debian"
      ignore_errors: yes

    # ===== TÂCHES COMMUNES =====
    - name: 📝 Création du répertoire pour scripts
      file:
        path: /home/ec2-user
        state: directory
        mode: '0755'
        owner: ec2-user
        group: ec2-user
      ignore_errors: yes

    - name: 📝 Création du script de monitoring Fode-DevOps
      copy:
        content: |
          #!/bin/bash
          # Fode-DevOps Monitoring Script
          echo "=== FODE-DEVOPS MONITORING ==="
          echo "Date: $(date)"
          echo "Uptime: $(uptime)"
          echo "Memory: $(free -h | grep Mem)"
          echo "Disk: $(df -h / | tail -1)"
          echo "Load: $(cat /proc/loadavg)"
          echo "================================"
        dest: /home/ec2-user/fode-devops-monitor-ansible.sh
        mode: '0755'
        owner: ec2-user
        group: ec2-user
      ignore_errors: yes

    - name: 📄 Création du répertoire web
      file:
        path: /var/www/html
        state: directory
        mode: '0755'
        owner: "{{ 'apache' if ansible_os_family == 'RedHat' else 'www-data' }}"
        group: "{{ 'apache' if ansible_os_family == 'RedHat' else 'www-data' }}"

    - name: 📄 Création page de test Ansible
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Fode-DevOps - Test Ansible</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; background: #f4f4f4; }
                  .container { background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                  h1 { color: #2c3e50; }
                  .info { background: #e8f4fd; padding: 15px; border-radius: 5px; margin: 10px 0; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🚀 Fode-DevOps Infrastructure</h1>
                  <div class="info">
                      <h3>✅ Configuration Ansible réussie!</h3>
                      <p><strong>Serveur:</strong> {{ inventory_hostname }}</p>
                      <p><strong>OS:</strong> {{ ansible_distribution }} {{ ansible_distribution_version }}</p>
                      <p><strong>Date:</strong> {{ ansible_date_time.date }}</p>
                      <p><strong>Projet:</strong> {{ project_name }}</p>
                      <p><strong>Environnement:</strong> {{ environment }}</p>
                  </div>
              </div>
          </body>
          </html>
        dest: /var/www/html/ansible-test.html
        mode: '0644'
        owner: "{{ 'apache' if ansible_os_family == 'RedHat' else 'www-data' }}"
        group: "{{ 'apache' if ansible_os_family == 'RedHat' else 'www-data' }}"

    - name: 📊 Collecte des métriques système
      shell: |
        echo "=== FODE-DEVOPS SYSTEM METRICS ==="
        echo "Uptime: $(uptime)"
        echo "Memory: $(free -h | grep Mem)"
        echo "Disk: $(df -h / | tail -1)"
        echo "Load: $(cat /proc/loadavg)"
        echo "Processes: $(ps aux | wc -l)"
        echo "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      register: system_metrics

    - name: 📈 Affichage des métriques
      debug:
        msg: "{{ system_metrics.stdout_lines }}"

    - name: ✅ Test de validation finale
      uri:
        url: "http://localhost/ansible-test.html"
        method: GET
        status_code: 200
        timeout: 10
      ignore_errors: yes
      register: web_check

    - name: 🎉 Message de succès Fode-DevOps
      debug:
        msg: |

          ✅ Configuration Ansible terminée avec succès !

          🌐 Site web: http://{{ ansible_host | default('localhost') }}
          🧪 Page test: http://{{ ansible_host | default('localhost') }}/ansible-test.html
          📊 OS détecté: {{ ansible_distribution }} {{ ansible_distribution_version }}
          🔧 Gestionnaire: {{ ansible_pkg_mgr }}

          🚀 Infrastructure Fode-DevOps opérationnelle !